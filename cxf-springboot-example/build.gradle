buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

// for war file to have different name
war {
    baseName = 'cxf-demo'
}

dependencies {
    compile "org.apache.cxf:cxf-spring-boot-starter-jaxws:${cxfVersion}"
    compile "org.apache.cxf:cxf-rt-features-logging:${cxfVersion}"
    // Conditional processing in Logback needs janino
    compile "org.codehaus.janino:janino:${janinoVersion}"

    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    compile "io.springfox:springfox-swagger2:${swaggerVersion}"
    compile "org.springframework.boot:spring-boot-starter-security"

    compile "org.springframework.boot:spring-boot-starter-jdbc"
    // to get org.aspectj:aspectjweaver:1.8.13
    compile "org.springframework.boot:spring-boot-starter-aop"
    compile "com.h2database:h2:${h2Version}"

    compile "org.springframework.boot:spring-boot-devtools"
    compileOnly "org.projectlombok:lombok:${lombockVersion}"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.spockframework:spock-core:${spockVersion}"
    testImplementation "org.spockframework:spock-spring:${spockVersion}"
    testImplementation "org.springframework.security:spring-security-test"

    providedRuntime "javax.servlet:javax.servlet-api:3.1.0"
}

// Override Spring Version
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.springframework') {
            details.useVersion "${springVersion}"
        }
    }
}